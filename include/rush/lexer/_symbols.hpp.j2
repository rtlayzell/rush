#pragma once

#ifndef RUSH_LEXER__SYMBOLS_HPP
#define RUSH_LEXER__SYMBOLS_HPP

#include <string>

namespace rush {
	namespace symbols {
		enum symbol_t {
			unknown,
## for symbol in symbols
			{# newline #}
			{{ symbol/name }},
## if existsIn(symbol, "compounded")
## for compounded in symbol/compounded
			{# newline #}
			{{ compounded/name }},
## endfor
## endif
## endfor
		};

		std::string to_string(symbol_t);
		symbol_t to_value(std::string const&);
	}

	using symbols::symbol_t;
	using symbols::to_string;
}


#endif // RUSH_LEXER__SYMBOLS_HPP