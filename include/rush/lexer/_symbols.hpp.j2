/*************************************************************************
* Copyright 2018 Reegan Troy Layzell
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*************************************************************************/
#pragma once

#ifndef RUSH_LEXER__SYMBOLS_HPP
#define RUSH_LEXER__SYMBOLS_HPP

#include <string>

namespace rush {
	namespace symbols {
		enum symbol_token_t {
			unknown,
## for symbol in symbols
			{{ symbol/name }},
## if existsIn(symbol, "compounded")
## for compounded in symbol/compounded
			{{ compounded/name }},
## endfor
## endif
## endfor
		};

		std::string to_string(symbol_token_t);
		symbol_token_t to_value(std::string const&);
	}

	using symbols::symbol_token_t;
	using symbols::to_string;
}


#endif // RUSH_LEXER__SYMBOLS_HPP
