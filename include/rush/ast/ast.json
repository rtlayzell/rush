{
	"prefix": [
		{ "precedence": 40, "name": "positive", "symbol_token": "plus" },
		{ "precedence": 40, "name": "negative", "symbol_token": "minus" },
		{ "precedence": 40, "name": "pre_increment", "symbol_token": "plus_plus", "display": "pre-increment" },
		{ "precedence": 40, "name": "pre_decrement", "symbol_token": "minus_minus", "display": "pre-decrement" },
		{ "precedence": 40, "name": "logical_negation", "symbol_token": "exclamation_mark", "display": "logical-negation" },
      { "precedence": 40, "name": "bitwise_negation", "symbol_token": "tilde_exclamation", "display": "bitwise-negation" }
   ],

   "postfix": [
      { "precedence": 20, "name": "invoke", "symbol_token": "left_parenthesis", "exclude_func": true },
      { "precedence": 20, "name": "post_increment", "symbol_token": "plus_plus", "display": "post-increment" },
      { "precedence": 20, "name": "post_decrement", "symbol_token": "minus_minus", "display": "post-decrement" }
   ],

	"binary": [
      { "associativity": -1, "precedence": 30, "name": "exponentiation", "symbol_token": "caret" },
      { "associativity": -1, "precedence": 50, "name": "multiplication", "symbol_token": "asterisk" },
		{ "associativity": -1, "precedence": 50, "name": "division", "symbol_token": "forward_slash" },
		{ "associativity": -1, "precedence": 50, "name": "modulo", "symbol_token": "percent" },
		{ "associativity": -1, "precedence": 60, "name": "addition", "symbol_token": "plus" },
		{ "associativity": -1, "precedence": 60, "name": "subtraction", "symbol_token": "minus" },
		{ "associativity": -1, "precedence": 70, "name": "left_shift", "symbol_token": "double_left_chevron", "display": "left-shift" },
		{ "associativity": -1, "precedence": 70, "name": "right_shift", "symbol_token": "double_right_chevron", "display": "right-shift" },
		{ "associativity": -1, "precedence": 90, "name": "less_than", "symbol_token": "left_chevron", "display": "less-than" },
		{ "associativity": -1, "precedence": 90, "name": "less_equals", "symbol_token": "left_chevron_equals", "display": "less-equals" },
		{ "associativity": -1, "precedence": 90, "name": "greater_than", "symbol_token": "right_chevron", "display": "greater-than" },
		{ "associativity": -1, "precedence": 90, "name": "greater_equals", "symbol_token": "right_chevron_equals", "display": "greater-equals" },
      { "associativity": -1, "precedence": 100, "name": "equal", "symbol_token": "equals_equals" },
		{ "associativity": -1, "precedence": 100, "name": "not_equal", "symbol_token": "exclamation_mark_equals", "display": "not-equal" },
		{ "associativity": -1, "precedence": 110, "name": "bitwise_and", "symbol_token": "tilde_ampersand", "display": "bitwise-and" },
		{ "associativity": -1, "precedence": 120, "name": "bitwise_xor", "symbol_token": "tilde_caret", "display": "bitwise-xor" },
		{ "associativity": -1, "precedence": 130, "name": "bitwise_or", "symbol_token": "tilde_pipe" , "display": "bitwise-or" },
      { "associativity": -1, "precedence": 140, "name": "inclusive_range", "symbol_token": "ellipses", "display": "inclusive-range" },
      { "associativity": -1, "precedence": 140, "name": "exclusive_range", "display": "exclusive-range" },
		{ "associativity": -1, "precedence": 150, "name": "logical_and", "symbol_token": "double_ampersand", "display": "logical-and" },
      { "associativity": -1, "precedence": 160, "name": "logical_or", "symbol_token": "double_pipe", "display": "logical-or" },
      { "associativity": 1, "precedence": 170, "name": "ternary", "symbol_token": "question_mark", "binary_expression": false },
      { "associativity": 1, "precedence": 170, "name": "assignment", "symbol_token": "equals" },
      { "associativity": 1, "precedence": 170, "name": "compound_multiplication", "symbol_token": "asterisk_equals" , "display": "compound-multiplication" },
      { "associativity": 1, "precedence": 170, "name": "compound_subtraction", "symbol_token": "minus_equals" , "display": "compound-subtraction" },
      { "associativity": 1, "precedence": 170, "name": "compound_division", "symbol_token": "forward_slash_equals" , "display": "compound-division" },
      { "associativity": 1, "precedence": 170, "name": "compound_addition", "symbol_token": "plus_equals", "display": "compound-addition" },
      { "associativity": 1, "precedence": 170, "name": "compound_modulo", "symbol_token": "percent_equals" , "display": "compound-modulo" },
      { "associativity": 1, "precedence": 170, "name": "compound_left_shift", "symbol_token": "double_left_chevron_equals" , "display": "compound-left-shift" },
      { "associativity": 1, "precedence": 170, "name": "compound_right_shift", "symbol_token": "double_right_chevron_equals" , "display": "compound-right-shift" },
      { "associativity": 1, "precedence": 170, "name": "compound_bitwise_or", "symbol_token": "tilde_pipe_equals" , "display": "compound-bitwise-or" },
      { "associativity": 1, "precedence": 170, "name": "compound_bitwise_xor", "symbol_token": "tilde_caret_equals" , "display": "compound-bitwise-xor" },
      { "associativity": 1, "precedence": 170, "name": "compound_bitwise_and", "symbol_token": "tilde_ampersand_equals", "display": "compound-bitwise-and"  }
   ],

   "statements": {
      "simple": [
         { "name": "pass", "kinds": [ "simple" ] },
         { "name": "throw_", "kinds": [ "simple", "result" ] },
         { "name": "break_", "kinds": [ "simple" ] },
         { "name": "yield_", "kinds": [ "result" ] },
         { "name": "return_", "kinds": [ "simple", "result" ] },
         { "name": "continue_", "kinds": [ "simple" ] },
         { "name": "import_", "kinds": [ "simple" ] },
         { "name": "module_", "kinds": [ "simple" ] }
      ],

      "compound": [
         { "name": "if_", "kinds": [ "conditional" ] },
         { "name": "try_", "kinds": [ ] },
         { "name": "for_", "kinds": [ "iteration" ] },
         { "name": "else_", "kinds": [ "alternating" ] },
         { "name": "case_", "kinds": [ ] },
         { "name": "while_", "kinds": [ "conditional" ] },
         { "name": "catch_", "kinds": [ ] },
         { "name": "switch_", "kinds": [ ] },
         { "name": "finally_", "kinds": [ ] },
         { "name": "with_", "kinds": [ ] }
      ]
   }
}
